{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Debug (ocd/stlink)",
      "cwd": "${workspaceRoot}",
      "executable": "${command:cmake.launchTargetPath}", //or fixed file path: build/project-name.elf
      "interface": "swd",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "device": "STM32F103xB", //MCU used
      "preLaunchTask": "CMake: build",
      //"preLaunchCommands" : [ "monitor arm semihosting enable" ],
      "preRestartCommands": ["load", "enable breakpoint", "monitor reset"],
      "runToEntryPoint": "main",
      //"showDevDebugOutput" : "raw",
      "svdFile": "${workspaceRoot}/STM32F103xB.svd",
      "liveWatch": { "enabled": false, "samplesPerSecond": 4 },
      "configFiles": ["interface/stlink.cfg", "target/stm32f1x.cfg"]
    },
    {
      "name": "Build & Debug (gdb/stlink)",
      "cwd": "${workspaceFolder}",
      "type": "cortex-debug",
      "executable": "${command:cmake.launchTargetPath}",
      // Let CMake extension decide executable: "${command:cmake.launchTargetPath}"
      // Or fixed file path: "${workspaceFolder}/path/to/filename.elf"
      "request": "launch",
      "servertype": "stlink",
      "device": "STM32F103CBTx", //MCU used
      "interface": "swd",
      "serialNumber": "", //Set ST-Link ID if you use multiple at the same time
      "runToEntryPoint": "main",
      "svdFile": "${config:STM32VSCodeExtension.cubeCLT.path}/STMicroelectronics_CMSIS_SVD/STM32F103.svd",
      "v1": false, //Change it depending on ST Link version
      "serverpath": "${config:STM32VSCodeExtension.cubeCLT.path}/STLink-gdb-server/bin/ST-LINK_gdbserver",
      "stm32cubeprogrammer": "${config:STM32VSCodeExtension.cubeCLT.path}/STM32CubeProgrammer/bin",
      "stlinkPath": "${config:STM32VSCodeExtension.cubeCLT.path}/STLink-gdb-server/bin/ST-LINK_gdbserver",
      "armToolchainPath": "${config:STM32VSCodeExtension.cubeCLT.path}/GNU-tools-for-STM32/bin",
      "gdbPath": "${config:STM32VSCodeExtension.cubeCLT.path}/GNU-tools-for-STM32/bin/arm-none-eabi-gdb",
      "serverArgs": ["-m", "0"]
      //"preLaunchTask": "Build + Flash"
      /* If you use external loader, add additional arguments */
      //"serverArgs": ["--extload", "path/to/ext/loader.stldr"],
    }
  ]
}
